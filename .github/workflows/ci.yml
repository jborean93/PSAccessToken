name: Test PSAccessToken
on:
  push:

  pull_request:
    branches:
    - main

    release:
      types: published

  schedule:
  - cron: 0 9 * * *

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  POWERSHELL_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  build:
    name: build
    runs-on: windows-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Build module
      shell: pwsh
      run: ./build.ps1 -Configuration Debug -Task Build

    - name: Capture PowerShell Module
      uses: actions/upload-artifact@v2
      with:
        name: PSModule
        path: build/*.nupkg

  test:
    name: test
    needs:
    - build
    runs-on: ${{ matrix.info.os }}
    strategy:
      fail-fast: false
      matrix:
        info:
        - name: PS x64
          os: windows-latest
          psversion: pwsh
        - name: WinPS x64
          os: windows-latest
          psversion: powershell
        - name: WinPS x86
          os: windows-latest
          psversion: C:\Windows\SysWow64\WindowsPowerShell\v1.0\powershell

    steps:
    - uses: actions/checkout@v2

    - name: Restore Built PowerShell Module
      uses: actions/download-artifact@v2
      with:
        name: PSModule
        path: build

    - name: Install Built PowerShell Module
      shell: pwsh
      run: |
        $manifestItem = Get-Item ([IO.Path]::Combine('module', '*.psd1'))
        $moduleName = $manifestItem.BaseName
        $manifest = Test-ModuleManifest -Path $manifestItem.FullName -ErrorAction Stop -WarningAction Ignore

        $destPath = [IO.Path]::Combine('build', $moduleName, $manifest.Version)
        if (-not (Test-Path -LiteralPath $destPath)) {
            New-Item -Path $destPath -ItemType Directory | Out-Null
        }

        # WinPS doesn't support extracting from anything without a .zip extension so we need to rename it
        Get-ChildItem build/*.nupkg | Rename-Item -NewName { $_.Name -replace '.nupkg', '.zip' }

        Expand-Archive -Path build/*.zip -DestinationPath $destPath -Force -ErrorAction Stop

    - name: Run Tests
      shell: pwsh
      run: |
        & ${{ matrix.info.psversion }} -NoProfile -File ./build.ps1 -Task Test
        exit $LASTEXITCODE

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (${{ matrix.info.name }})
        path: ./build/TestResults/Pester.xml

    - name: Upload Coverage Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Coverage Results (${{ matrix.info.name }})
        path: ./build/TestResults/Coverage.xml

    - name: Upload Coverage to codecov
      uses: codecov/codecov-action@v1
      with:
        files: ./build/TestResults/Coverage.xml
        flags: ${{ matrix.info.name }}

  publish:
    name: publish
    needs:
    - build
    - test
    runs-on: windows-latest
    steps:
    - name: Restore Built PowerShell Module
      uses: actions/download-artifact@v2
      with:
        name: PSModule
        path: build

    - name: Publish to Gallery
      if: github.event_name == 'release'
      shell: pwsh
      run: echo "test"
